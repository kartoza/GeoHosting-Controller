version: '3.9'
services:
  db:
    volumes:
      - ./volumes/pg/postgres_data:/var/lib/postgresql

  worker:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: vscode
      args:
        BUILDKIT_INLINE_CACHE: 0
    volumes:
      - ../:/home/web/project
      - ./volumes/static:/home/web/static

  django:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: vscode
      args:
        BUILDKIT_INLINE_CACHE: 0
    volumes:
      - ../:/home/web/project
      - ./volumes/static:/home/web/static

  dev:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: vscode
      args:
        BUILDKIT_INLINE_CACHE: 0
    image: kartoza/${COMPOSE_PROJECT_NAME:-django_project}_dev
    volumes:
      - ../:/home/web/project
    environment:
      - DATABASE_NAME=${DATABASE_NAME:-django}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-docker}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-docker}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - DJANGO_SETTINGS_MODULE=core.settings.dev
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - ERPNEXT_API_KEY=${ERPNEXT_API_KEY:-erpnext_api_key}
      - ERPNEXT_API_SECRET=${ERPNEXT_API_SECRET:-erpnext_api_secret}
      - ERPNEXT_BASE_URL=${ERPNEXT_BASE_URL:-erpnext_base_url}
      - SECRET_KEY=${SECRET_KEY:-secret_key}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=redis_password
    links:
      - db
      - redis
      - worker
      - minio
      - minio-create-bucket
    entrypoint: [ ]
